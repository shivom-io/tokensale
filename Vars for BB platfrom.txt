---
###############################################################################

# THIS IS THE MAIN CONFIGUTATION FILE FOR YOUR SERVER AND APPLICATION!
# Each option has a small clarification above it.
# From the beginning of this file, you should fill SERVER options if you need,
# or just leave it with default data. Options marked with "Required" should
# be filled in any way.

# WARNING! BACKUP THIS FILE IN A SAFE PLACE AND DELETE IT IMMEDIATELY FROM ANY
# PUBLIC ACCESSIBLE SERVER AFTER YOUR DEPLOY!

###############################################################################

# Backup vars
#------------------------------------------------------------------------------

# Restore from backup.
# If you fill "True", yor deploy will be the same, exept following:
# During your deploy, a fresh copy of IBBP from our repo won't be downloaded,
# but a backup archive with your application with all your data in .env file.
# If you're restoring from backup,
# YOU DON'T NEED TO FILL DATA IN APPLICATION OPTIONS, just use previous data,
# that you filled on your deploy
# Default: False
restore_from_backup: False

# Name of your backup archive
# Please, fill the name of your backup archive in following format:
# (your-fqdn)-year-month-dayofthemonth.tgz
# for example: (my-ico.com)-2017-01-23.tgz
# Required, if you fill "True" on restore_from_backup option above.
backup_archive_name:

# Name of your S3 bucket
backup_bucket_name:

#Your AWS access key
aws_access_key:

# Your AWS secret key
aws_secret_key:

# Password for your previously created backup database user
backup_db_password:


# Domain Vars
# -----------------------------------------------------------------------------

# FQDN of your server. If you use punicode hostname, just enter
# transliterated punicode FQDN here, for example mai-ikoboks.kom. Required! (str)
hostname:

# Default: False
# Whether to enable Punicode FQDN in webserver env (bool)
punicode: False

# Punicode FQDN of server. Set if available (str)
punicode_hostname:

# Default: False
# Whether to set Punicode FQDN as a main host in webserver env (bool)
main_domain_punicode: False

# Default: False
# Should we enable SSL (Letsencrypt via certbot) on webserver env. Required! (bool)
https: True

# If we use SSL, enter FQDNs for hosts (str). Required if you use HTTPS.
# Tip: if you don't have 'www' subdomain, just delete this line:
# - "-d www.'{{hostname}}'"
certbot_domains:
  - "-d '{{hostname}}'"
  - "-d www.'{{hostname}}'"

# System Vars
# -----------------------------------------------------------------------------

# Default: False
# Whether to create new user for an application. Enter "True" to create one or
# "False" to use a user, which is already present in your system. (str)
create_app_user: True

# Default: ibbp
# Name of a local user, which will be created on your server, or
# which is already present on your system.
# If you're restoring from backup, enter same user name, which
# you've used for deploy. Required (str).
user: ibbp

# Default: Directory with your app will be named as your FQDN.
# Optional name of your application
appname: "{{hostname}}"

# Default: your local user home directory
# System path, where your app will be placed
# Default: /home/your-local-user/application-name/
# It will be the path, based on data you're entered above in "user"
# and "hostname" vars.
destination: /home/{{user}}/{{appname}}

###############################################################################

# From here, you should fill your APPLICATION options.

###############################################################################

# GENERAL SETTINGS
# -----------------------------------------------------------------------------
# Site URL
# Default: your FQDN
# Example: my-ico.com
app_routes_host: "{{hostname}}"

# URL to the assets location. If CDN is not used to host the assets,
# site url can be used.
# Default: your FQDN
# Example: my-ico.com
asset_host: "{{hostname}}"

# Email of administrator account.
# It also used for certbot notifications about expiring SSL certs, if you use HTTPS
# Example: admin@site.com
admin_application_email:

# Password of administrator account
# Warning! Password must include at least one lowercase letter,
# one uppercase letter, and one digit!
# DO NOT USE SPECIAL CHARACTERS IN YOUR PASSWORD! ONLY LETTERS AND NUMBERS!
# Example: Testpass123
admin_application_password:

# Defines if logs are saved to a file (=1) or output to STDOUT (=0).
# Logging to STDOUT is recommended for Heroku servers.
# Example: 1
log_to_file: 1

# Server timezone. UTC is used by default.
# To get the full list of timezones, execute the command: rake time:zones:all
# Example: UTC
timezone: UTC

# Enables skipping confirmation email during registration.
# Users are logged in right after the registration =1.
# Email with the confirmation link is sent to users after the registration = 0.
# Example: 0
skip_user_confirmation: 0

# Secret key for API tokens. Long random character string.
# Tip: you can execute rails secret  in console to generate a random key.
# SECRET_KEY_BASE is used as default value. Generate a new one is
# strongly recommended.
# Example: 0597c210b86a777dm0597c210b875df31606b9b31288bd097c210b8db4c5df
jwt_secret:

# AUTH SETTINGS
# -----------------------------------------------------------------------------
# Secret key. Long random character string.
# Tip: you can execute rails secret in console to generate a random key.
# Example: 99921e7c293b9997c210b83128606b8bd199rt97c293b65acd7ff37ls451bb
devise_secret:

#Secret key. Long random character string.
#Tip: you can execute rails secret in console to generate a random key.
# Example: 753128606b8bd1e7606992197c210be7606b8bd199rtc293b9997c210b8753122b
secret_key_base:

# The number of failed log in attempts, after which the user account is locked.
# Example: 10
devise_maximum_attempts: 10

# The time (in seconds) after which the locked user account is unlocked.
# Example: 3600
devise_unlock_in: 3600

# Minimum allowed  number of characters in user passwords.
# Example: 8
devise_password_length: 8

# Lifetime (in hours) of the reset password link sent by email.
# After it the link expires.
# Example: 6
devise_reset_password_within: 6

# DATABASE SETTINGS
# -----------------------------------------------------------------------------
# Name of your database and a user for it is equal, and match your local user,
# which you defined above in app settings.
# DO NOT USE SPECIAL CHARACTERS IN YOUR PASSWORD! ONLY LETTERS AND NUMBERS!
# Password of the database user. Required!
# Example: YourVeryStrongpAssWorDLettersAndNumbers
db_password:

# COINPAYMENTS SETTINGS
# -----------------------------------------------------------------------------
# Parameters from https://www.coinpayments.net .
# See
# https://docs.google.com/document/d/1BHqWp-m0YNZg2ifpKFmHR-7-tta5Qc471tk0b0I4byA
# Leave the parameters empty if you do not use the CoinPayments payment service.
# Merchant ID
coin_payments_merchant_id:

# Public API Key
coin_payments_public_api_key:

# Private API Key
coin_payments_private_api_key:

# IPN secret
coin_payments_ipn_secret:

# The number of wallets in the pool of “vacant” wallets that is generated in
# advance during the ICO setup. When a payment takes place, a wallet from the
# pool is assigned to the user, and a new “vacant” wallet is automatically
# added to the pool, so that the number of the wallets on the pool remains the same.
# Please note that the parameter defines how many wallets will be generated
# for every available cryptocurrency, not the total number of wallets.
# For example, if the parameter value is 1000, and there are 5 available
# cryptocurrencies (selected in the CoinPayments system), a pool of 5000 wallets
# will be generated.
# Example: 10
coin_payments_free_address_pool: 1

# ANYPAYCOINS SETTINGS
# -----------------------------------------------------------------------------
# Parameters for the AnyPayCoins payment service.
# See
# https://docs.google.com/document/d/1BHqWp-m0YNZg2ifpKFmHR-7-tta5Qc471tk0b0I4byA
# Leave the parameters empty if you do not use AnyPayCoins
# for promo tokens or cryptocurrency payments.
# API Key from your account on https://anypaycoins.com
any_pay_coins_api_key:69PyXojIuH8FLQG9uWDEmPVPxCHtLg1S

# Enable test mode. (on=1, off=0).
# Example: 0 (meaning that the system works in production mode)
any_pay_coins_test_mode: 0

# IPN secret from your account on https://anypaycoins.com
any_pay_coins_ipn_secret:pL17f9Po20kJfuMRAmueh1oU9vD7mAC8

# Client ID from your account on https://anypaycoins.com
any_pay_coins_client_id:120

# The number of wallets in the pool of “vacant” wallets to be generated prior
# to using AnyPayCoins as a payment bridge service for cryptocurrencies.
# When a payment takes place, a wallet from the pool is assigned to the user,
# and a new “vacant” wallet is automatically added to the pool, so that the
# number of the wallets on the pool remains the same.
# Please note that the parameter defines how many wallets will be generated
# for every available cryptocurrency, not the total number of wallets.
# For example, if the parameter value is 1000, and there are 5 available
# cryptocurrencies (selected in the AnyPayCoins system), a pool of 5000 wallets
# will be generated.
# Leave it empty if you use AnyPayCoins only for promo tokens.
# Example: 10
any_pay_coins_free_address_pool: 1

# Turns on/off AnyPayCoins as a payment bridge service
# in the system  (on=1, off=0).
#  - Use AnyPayCoins only for promo tokens = 1
#  - Use AnyPayCoins for cryptocurrency payments and promo tokens = 0
any_pay_coins_disable_deposits: 0

# PROMO TOKEN PROPERTIES
# -----------------------------------------------------------------------------
# To start using promo tokens, define the following parameters.
# Leave the parameters empty if you are not using promo tokens
# for your ICO campaign.
# Enable/disable promo tokens for your ICO campaign (on=1, off=0).
promo_tokens_enable: 0

# The number of wallets in the pool of “vacant” promo token wallets that is
# generated prior to using promo tokens.
# Example: 50
promo_tokens_address_pool: 10

# Promo token contract address.
# Example: 0xCFA66eebF415bAfAF5011ae9dFD7B51CFA
promo_tokens_contract:

# SMTP SETTINGS
# -----------------------------------------------------------------------------
# Leave the SMTP settings empty if you use another delivery method,
# for example, POSTAL. If you use Mailgun add-on for Heroku, populate the
# parameters with values from the corresponding MAILGUN_ parameters.

# SMTP address
# If Mailgun add-on for Heroku is used,
# copy the value from MAILGUN_SMTP_SERVER parameter here.
# Example: smtp.yandex.com
smtp_address: smtp.yandex.com

# SMTP Port.
# If Mailgun add-on for Heroku is used, copy the value from MAILGUN_SMTP_PORT
# parameter here.
# Example: 465
smtp_port:

# SMTP Domain.
# If Mailgun add-on for Heroku is used, copy the value from MAILGUN_DOMAIN
# parameter here
# Example: yandex.com
smtp_domain:

# SMTP User.
# If Mailgun add-on for Heroku is used, copy the value from MAILGUN_SMTP_LOGIN
# parameter here.
smtp_user_name: your@email.com

# SMTP Password.
# If Mailgun add-on for Heroku is used, copy the value from MAILGUN_SMTP_PASSWORD
# parameter here.
smtp_password:

# Detects if STARTTLS is enabled in your SMTP server and starts to use it.
# True or false.
smtp_enable_starttls_auto: true

# POSTAL DELIVERY METHOD SETTINGS
# -----------------------------------------------------------------------------

# Leave it empty if you use another delivery method, for example,
# SMTP or Mailgun add-on for Heroku.
postal_host:

# Postal server key
postal_server_key:

# SENDGRID SETTINGS
# -----------------------------------------------------------------------------

# Leave it empty if you use another delivery method.
# To enable email delivery through SendGrid https://sendgrid.com,
# enter API key from your SendGrid account.
sendgrid_api_key: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

# MAILER SETTINGS
# -----------------------------------------------------------------------------

# Email address from which notifications will be sent.
# Example: Robot <no-reply@yandex.ru>
mailer_from:invest@shivom.io

# LOG DNA PREFERENCES
# -----------------------------------------------------------------------------

# API Key from LogDNA (cloud-based log management system).
# Leave it empty if you do not use LogDNA.
log_dna_api_key:

# Your application name as you want it to appear in Log DNA
log_dna_app_name:

# INVOICED SETTINGS
# -----------------------------------------------------------------------------
# Parameters from https://invoiced.com.
# See
# https://docs.google.com/document/d/1BHqWp-m0YNZg2ifpKFmHR-7-tta5Qc471tk0b0I4byA

# API Key.
# Leave it empty if the Invoiced system is not used for the ICO payments processing.
invoiced_api_key:UZj3GDWZTJk3gGna8XjWpZ6olnUZMMJX

# Is it in test mode?
# Set the value to 0 on production environment
invoiced_test_mode: 0

# Set the value to NET 10
invoiced_payment_terms: NET 10

# Description of the invoice item that will appear in the invoice sent
# to the user by the Invoiced service. You can use {{user_email}} variable.
# Example: Refill for "user_email" account
invoiced_invoice_description: Refill account {{ '{{' }}user_email{{ '}}' }}

# REFERRAL SETTINGS
# -----------------------------------------------------------------------------

# Domain in the referral link. If it is empty, the value from
# the ROUTES_HOST parameter is used.
referral_host_with_schema:

# Turns on/off signing up only through a referral link.
# - Allow signing up to anyone = 0
# - Allow signing up only to users who have followed a referral link = 1
referral_allow_sign_up_referrals_only: 0

# GOOGLE ANALYTICS SETTINGS
# -----------------------------------------------------------------------------

# Google Analytics Tracking Code snippet (obtained from your Analytics account).
# If it is not empty, enables Google Analytics tracking for every page of your
# ICO site.
# Please, fill it in ONE line.
google_analytics:

# If it is not empty, enables cross-domain tracking.
# List the other domains to be tracked (separated by commas).
# When setting Google Analytics for your other domains, remember to edit the
# tracking code snippets according to the instruction:
# https://support.google.com/analytics/answer/1034342?hl=en
# Example: example-1.com, example-2.com
google_analytics_cross_domain:

# To set up Google Tag Manager, insert the container ID, formatted
# as "GTM-XXXXXX" (obtained from your tagmanager.google.com account).
google_tag_manager:

# TWO-FACTOR AUTHORIZATION SETTINGS
#------------------------------------------------------------------------------

# Secret key for two-factor authorization.
# Minimum 32 bits (to ensure proper work of the 2FA module).
# Tip: you can execute rails secret in console to generate a random key.
# Example: 0cf713455d6bc5a8a0a751e68c5f0de29cf1033ca6ad75c00d017c2
two_factor_encryption_key:

# ROLLBAR SETTINGS
# -----------------------------------------------------------------------------

# Turns on/off integration with Rollbar service. Enetr "True" to enable,
# and fill rollbar_access_token variable below.
# Default: False
rollbar_enable: False

# Access token for enabling the Rollbar error tracking service https://rollbar.com
# Leave it empty if you do not use Rollbar.
rollbar_access_token:

# GOOGLE OAUTH2 SETTINGS
# -----------------------------------------------------------------------------
google_client_id:
google_client_secret:

# FACEBOOK OAUTH2 SETTINGS
#------------------------------------------------------------------------------
facebook_key:
facebook_secret:

# ALLOW2BAN SETTINGS
# -----------------------------------------------------------------------------

# Maximum allowed number of sign in attempts during the time defined in
# the ALLOW_TO_BAN_SIGN_IN_FINDTIME_SECOND parameter. If the number is exceeded,
# the IP address is locked for the period defined in the
# ALLOW_TO_BAN_SIGN_IN_BANTIME_SECOND parameter.
# With the example values in the complementing parameters, it means that
# if a user attempts to sign in more than 10 times in 60 seconds,
# their IP address is banned for 1 hour (3600 seconds).
# Example: 10
allow_to_ban_sign_in_maxretry: 10

# The time period  (in seconds) during which a user can attempt to sign
# in a limited number of times before their IP is locked.
# Example: 60
allow_to_ban_sign_in_findtime_second: 60

# The time (in seconds) after which the automatically locked IP address is unlocked.
# Example: 3600
allow_to_ban_sign_in_bantime_second: 3600